{"version":3,"sources":["components/fullpage.js","sections/TitleSection.js","sections/AboutSection.js","components/SkillCard.js","components/UpScroll.js","sections/SkillSection.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["FullPage","props","state","children","this","className","style","background","Component","TitleSection","color","data","title","subtitle","Object","keys","links","map","key","url","activeClass","to","spy","smooth","offset","duration","delay","class","src","icons","down","alt","name","AboutSection","sections","items","p","content","SkillCard","skill","image","UpScroll","display","flexDirection","alignItems","justifyContent","width","margin","SkillSection","eachskill","Navbar","href","App","changeColor","rang","zamine","counter","setState","background_first","background_second","background_third","animationInterval","snowCharacter","vMaxY","vMaxX","position","marginLeft","zIndex","onClick","paint","marginTop","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.183e1ef3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./fullpage.css\";\r\n\r\nclass FullPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    const { children } = this.props;\r\n    return (\r\n      <div\r\n        className={`fullpage ${this.props.className || \"\"}`}\r\n        style={{\r\n          background: this.props.background,\r\n        }}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default FullPage;\r\n","import React, { Component } from \"react\";\r\nimport FullPage from \"../components/fullpage\";\r\nimport data from \"../data.json\";\r\nimport { SocialIcon } from \"react-social-icons\";\r\nimport { Link, Element } from \"react-scroll\";\r\n\r\nclass TitleSection extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <FullPage className=\"first\" background={this.props.background}>\r\n          <div>\r\n            <h1 className=\"title\" style={{ color: this.props.color }}>\r\n              {data.title}\r\n            </h1>\r\n          </div>\r\n          <div>\r\n            <h2 style={{ color: this.props.color }}>{data.subtitle}</h2>\r\n          </div>\r\n          <div>\r\n            {Object.keys(data.links).map((key) => {\r\n              return <SocialIcon url={data.links[key]} />;\r\n            })}\r\n          </div>\r\n        </FullPage>\r\n        <Link\r\n          activeClass=\"active\"\r\n          to=\"About\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={50}\r\n          duration={500}\r\n          delay={0}\r\n        >\r\n          <div class=\"downArrow bounce\">\r\n            <img src={data.icons.down} alt=\"\" />\r\n          </div>\r\n        </Link>\r\n        <Element name=\"About\" className=\"element\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default TitleSection;\r\n","import React, { Component } from \"react\"; \r\n\r\nimport data from \"../data.json\";\r\nimport FullPage from \"../components/fullpage\";\r\nimport {  Element } from \"react-scroll\";\r\n\r\nclass AboutSection extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <FullPage className=\"second\" background={this.props.background}>\r\n          <h1 style={{ color: this.props.color }}>{data.sections[0].title}</h1>\r\n          <div className=\"paragraphs\" style={{ color: this.props.color }}>\r\n            {data.sections[0].items.map((p) => {\r\n              return <p>{p.content}</p>;\r\n            })}\r\n          </div>\r\n        </FullPage>\r\n        \r\n        <Element name=\"Skill\" className=\"element\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AboutSection;\r\n","import React, { Component } from \"react\";\r\nimport \"./SkillCard.css\";\r\n\r\nclass SkillCard extends Component {\r\n  render() {\r\n    const { skill } = this.props;\r\n    return (\r\n      <div style={{ background: this.props.background}} className=\"card\">\r\n        <div className=\"image-wrapper\">\r\n          <img src={skill.content.image} alt=\"\" />\r\n        </div>\r\n        <div className=\"skill-title-wrapper\">\r\n          <h4 style={{ color: this.props.color }}>{skill.content.title}</h4>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SkillCard;\r\n","import React, { Component } from \"react\";\r\nimport { Link, Element } from \"react-scroll\";\r\n\r\nclass UpScroll extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"flex-end\",\r\n          background: this.props.background\r\n        }}\r\n      >\r\n        <Link\r\n          activeClass=\"active\"\r\n          to=\"Home\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={50}\r\n          duration={500}\r\n          delay={0}\r\n        >\r\n          <img\r\n            src=\"images/up.png\"\r\n            style={{\r\n              width: \"30px\",\r\n              margin:'10px'\r\n            }}\r\n          />\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UpScroll;","import React, { Component } from \"react\";\r\nimport FullPage from \"../components/fullpage\";\r\nimport data from \"../data.json\";\r\nimport SkillCard from \"../components/SkillCard\";\r\nimport { Link, Element } from \"react-scroll\";\r\nimport UpScroll from \"../components/UpScroll.js\";\r\n\r\nclass SkillSection extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <FullPage className=\"third\" background={this.props.background}>\r\n          <h1 style={{ color: this.props.color }}>{data.sections[1].title}</h1>\r\n          <div  className=\"cards-wrapper\">\r\n            {data.sections[1].items.map((eachskill) => {\r\n              return <SkillCard color={this.props.color} background={this.props.background} skill={eachskill} />;\r\n            })}\r\n          </div>\r\n        </FullPage>\r\n        <UpScroll background={this.props.background} />\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SkillSection;\r\n","import React, { Component } from \"react\";\r\nimport \"./Navbar.css\";\r\nimport { Link, Element } from \"react-scroll\";\r\nimport data from \"../data.json\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"navbar\" >\r\n      <nav className=\"navbar fixed-top navbar-expand-lg   \">\r\n        <ul className=\"navbar-nav ml-auto  \">\r\n          <li className=\"nav-item \">\r\n            <Link\r\n              activeClass=\"active\"\r\n              to=\"About\"\r\n              spy={true}\r\n              smooth={true}\r\n              offset={50}\r\n              duration={500}\r\n              delay={0}\r\n            >\r\n              <a className=\"nav-link\" href=\"\">\r\n                about\r\n              </a>\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              activeClass=\"active\"\r\n              to=\"Skill\"\r\n              spy={true}\r\n              smooth={true}\r\n              offset={50}\r\n              duration={500}\r\n            >\r\n              <a className=\"nav-link\" href=\"\">\r\n                skills\r\n              </a>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n    );\r\n  }\r\n}\r\nexport default Navbar;\r\n\r\n\r\n","import React, { Component } from \"react\";\n\nimport TitleSection from \"./sections/TitleSection.js\";\nimport AboutSection from \"./sections/AboutSection.js\";\nimport SkillSection from \"./sections/SkillSection.js\";\nimport Navbar from \"./components/Navbar.js\";\nimport SnowStorm from \"react-snowstorm\";\nimport data from \"./data.json\";\nimport {  Element } from \"react-scroll\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: \"black\",\n      background_first: \"#8de0f6\",\n      background_second: \"rgb(182, 247, 118)\",\n      background_third: \"rgb(211, 136, 83)\",\n      counter: 0,\n    };\n  }\n  changeColor = () => {\n    let rang = [\"green\", \"#b3cde0\", \"#f4b6c2\", \"#e6e6ea\"];\n    let zamine = [\"#461220\", \"#011f4b\", \"#251e3e\", \"#1e1f26\"];\n    if (this.state.counter > 3) {\n      this.setState({\n        counter: 0,\n        color: rang[this.state.counter],\n        background_first: \" #8de0f6\",\n        background_second: \" rgb(182, 247, 118)\",\n        background_third: \" rgb(211, 136, 83)\",\n      });\n    } else\n      this.setState({\n        color: rang[this.state.counter],\n        background_first: zamine[this.state.counter],\n        background_second: zamine[this.state.counter],\n        background_third: zamine[this.state.counter],\n        counter: this.state.counter + 1,\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <SnowStorm\n          animationInterval={50}\n          snowCharacter={\"*\"}\n          vMaxY={2}\n          vMaxX={2}\n        />\n        <Element name=\"Home\" className=\"element\" />\n        <Navbar></Navbar>\n        <div className=\"changetheme\" style={{position:'absolute',marginLeft:'20px',zIndex:'10'}} >\n          <img onClick={this.changeColor} src={data.icons.paint} alt=\"\" style={{marginTop:'10px'}}/>\n        </div>\n        \n        \n\n        <TitleSection\n          color={this.state.color}\n          background={this.state.background_first}\n        />\n        \n        \n        <AboutSection\n          color={this.state.color}\n          background={this.state.background_second}\n        />\n\n        <SkillSection\n          color={this.state.color}\n          background={this.state.background_third}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}